{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","uuidv4","text","className","placeholder","onChange","name","ref","onClick","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","key","TodoList","setTodos","test","newTodos","updatedTodos","removedArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAgEeA,MA5Df,SAAoBC,GACnB,IAAD,EAE4BC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAFrE,mBAESC,EAFT,KAEgBC,EAFhB,KAIQC,EAAWC,iBAAO,MAExBC,qBAAU,WACRF,EAASG,QAAQC,WAGnB,IAAMC,EAAe,SAACC,GACpBP,EAASO,EAAEC,OAAOV,QAGdW,EAAe,SAACF,GACpBA,EAAEG,iBAEFf,EAAMgB,SAAS,CACbC,GAAIC,cACJC,KAAMf,IAERC,EAAS,KAGX,OACE,0BAAMW,SAAUF,EAAcM,UAAU,aACrCpB,EAAME,KACL,oCACE,2BACEmB,YAAY,mBACZlB,MAAOC,EACPkB,SAAUX,EACVY,KAAK,OACLC,IAAKlB,EACLc,UAAU,oBAEZ,4BAAQK,QAASX,EAAcM,UAAU,oBAAzC,WAKF,oCACE,2BACEC,YAAY,aACZlB,MAAOC,EACPkB,SAAUX,EACVY,KAAK,OACLH,UAAU,aACVI,IAAKlB,IAEP,4BAAQmB,QAASX,EAAcM,UAAU,eAAzC,e,cCVKM,EAxCF,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAAiB,EACxC7B,mBAAS,CAC/BgB,GAAI,KACJd,MAAO,KAHuD,mBACzDD,EADyD,KACnD6B,EADmD,KAchE,OAAI7B,EAAKe,GACA,kBAAC,EAAD,CAAUf,KAAMA,EAAMc,SATV,SAAAb,GACnB2B,EAAW5B,EAAKe,GAAId,GACpB4B,EAAQ,CACNd,GAAI,KACJd,MAAO,QAQJwB,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACf,yBACEd,UAAWa,EAAKE,WAAa,oBAAsB,WACnDC,IAAKF,GAEL,yBAAKE,IAAKH,EAAKhB,GAAIQ,QAAS,kBAAMG,EAAaK,EAAKhB,MACjDgB,EAAKd,MAER,yBAAKC,UAAU,SACb,kBAAC,IAAD,CACEK,QAAS,kBAAMI,EAAWI,EAAKhB,KAC/BG,UAAU,gBAEZ,kBAAC,IAAD,CACEK,QAAS,kBAAMM,EAAQ,CAAEd,GAAIgB,EAAKhB,GAAId,MAAO8B,EAAKd,QAClDC,UAAU,oBCmBLiB,MArDf,WAAqB,IAAD,EACQpC,mBAAS,IADjB,mBACX0B,EADW,KACJW,EADI,KAuClB,OACE,oCACE,2DACA,kBAAC,EAAD,CAAUtB,SAvCE,SAACiB,GACf,GAAKA,EAAKd,OAAQ,QAAQoB,KAAKN,EAAKd,MAApC,CAIA,IAAMqB,EAAQ,CAAIP,GAAJ,mBAAaN,IAE3BW,EAASE,OAiCP,kBAAC,EAAD,CACEb,MAAOA,EACPC,aAhBe,SAACX,GACpB,IAAIwB,EAAed,EAAMK,KAAI,SAACC,GAI5B,OAHIA,EAAKhB,KAAOA,IACdgB,EAAKE,YAAcF,EAAKE,YAEnBF,KAETK,EAASG,IAULZ,WAvBa,SAACZ,GAClB,IAAMyB,EAAa,YAAIf,GAAOgB,QAAO,SAACV,GAAD,OAAUA,EAAKhB,KAAOA,KAE3DqB,EAASI,IAqBLZ,WAlCa,SAACc,EAAQC,GACrBA,EAAS1B,OAAQ,QAAQoB,KAAKM,EAAS1B,OAI5CmB,GAAS,SAACQ,GAAD,OACPA,EAAKd,KAAI,SAACe,GAAD,OAAWA,EAAK9B,KAAO2B,EAASC,EAAWE,aCT3CC,MAVf,WAGE,OACE,yBAAK5B,UAAU,YACb,kBAAC,EAAD,QCLN6B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.7dc0bf69.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nfunction TodoForm ( props )\n{\n\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: uuidv4(),\n      text: input,\n    });\n    setInput('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"todo-form\">\n      {props.edit ? (\n        <>\n          <input\n            placeholder=\"Update your item\"\n            value={input}\n            onChange={handleChange}\n            name=\"text\"\n            ref={inputRef}\n            className=\"todo-input edit\"\n          />\n          <button onClick={handleSubmit} className=\"todo-button edit\">\n            Update\n          </button>\n        </>\n      ) : (\n        <>\n          <input\n            placeholder=\"Add a todo\"\n            value={input}\n            onChange={handleChange}\n            name=\"text\"\n            className=\"todo-input\"\n            ref={inputRef}\n          />\n          <button onClick={handleSubmit} className=\"todo-button\">\n            Add todo\n          </button>\n        </>\n      )}\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\n      key={index}\n    >\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n      <div className='icons'>\n        <RiCloseCircleLine\n          onClick={() => removeTodo(todo.id)}\n          className='delete-icon'\n        />\n        <TiEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className='edit-icon'\n        />\n      </div>\n    </div>\n  ));\n};\n\nexport default Todo;\n","import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = (todo) => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos((prev) =>\n      prev.map((item) => (item.id === todoId ? newValue : item))\n    );\n  };\n\n  const removeTodo = (id) => {\n    const removedArr = [...todos].filter((todo) => todo.id !== id);\n\n    setTodos(removedArr);\n  };\n\n  const completeTodo = (id) => {\n    let updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <>\n      <h1>What's Your Plan for Today?</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </>\n  );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App (  )\n{\n  \n  return (\n    <div className='todo-app'>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}